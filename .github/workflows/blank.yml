name: Compare AWS Secrets

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight

jobs:
  compare-secrets:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Configure AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Default region for AWS CLI

      # Step 2: Fetch secrets from both regions
      - name: Fetch secrets from both regions
        id: fetch_secrets
        run: |
          set -e

          REGION1="us-east-1"
          REGION2="us-west-2"
          SECRET_NAME="prod"

          # Fetch secrets as JSON strings
          SECRET1=$(aws secretsmanager get-secret-value --region "$REGION1" --secret-id "$SECRET_NAME" --query 'SecretString' --output text || echo "{}")
          SECRET2=$(aws secretsmanager get-secret-value --region "$REGION2" --secret-id "$SECRET_NAME" --query 'SecretString' --output text || echo "{}")

          # Save secrets to environment variables
          echo "SECRET1=$SECRET1" >> $GITHUB_ENV
          echo "SECRET2=$SECRET2" >> $GITHUB_ENV

      # Step 3: Compare secrets using Python
      - name: Compare secrets and find mismatched keys
        id: compare_secrets
        run: |
          set -e

          # Parse secrets as JSON using Python
          SECRET1_JSON=$(python3 -c "
import json
import sys
try:
    secret = json.dumps(json.loads('${{ env.SECRET1 }}'), sort_keys=True)
    print(secret)
except Exception as e:
    sys.exit('Invalid JSON in SECRET1: ' + str(e))
")
          SECRET2_JSON=$(python3 -c "
import json
import sys
try:
    secret = json.dumps(json.loads('${{ env.SECRET2 }}'), sort_keys=True)
    print(secret)
except Exception as e:
    sys.exit('Invalid JSON in SECRET2: ' + str(e))
")

          # Identify mismatched keys and values using Python
          MISMATCHES=$(python3 -c "
import json
secret1 = json.loads(\"$SECRET1_JSON\")
secret2 = json.loads(\"$SECRET2_JSON\")

region1_only = {k: v for k, v in secret1.items() if k not in secret2 or secret1[k] != secret2[k]}
region2_only = {k: v for k, v in secret2.items() if k not in secret1 or secret1[k] != secret2[k]}

mismatches = {
    'region1_only': region1_only,
    'region2_only': region2_only
}

print(json.dumps(mismatches, indent=2))
")

          # Save mismatches to environment
          echo "MISMATCHES=$MISMATCHES" >> $GITHUB_ENV

          # Check for differences
          DIFFERENCES=$(python3 -c "
import json
import sys
if \"$SECRET1_JSON\" == \"$SECRET2_JSON\":
    print('true')
else:
    print('false')
")

          echo "DIFFERENCES=$DIFFERENCES" >> $GITHUB_ENV

          # Output the match status
          if [[ "$DIFFERENCES" == "true" ]]; then
              echo "match=true" >> $GITHUB_ENV
          else
              echo "match=false" >> $GITHUB_ENV
          fi

      # Step 4: Notify Slack - Secrets Match
      - name: Notify Slack - Secrets Match
        if: ${{ env.match == 'true' }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ Secrets in both regions are identical."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 5: Notify Slack - Secrets Mismatched
      - name: Notify Slack - Secrets Mismatched
        if: ${{ env.match == 'false' }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"⚠️ Secrets in both regions do not match.\nMismatched details:\n'${{ env.MISMATCHES }}'"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
