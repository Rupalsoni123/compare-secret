name: Compare Secrets in AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  compare-secrets:
    runs-on: ubuntu-latest
    steps:
    
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Set default region for AWS CLI

      # Step 3: Run the secret comparison script
      - name: Compare Secrets in AWS Regions
        run: |
          set -e

          REGION1="us-east-1"
          REGION2="us-west-2"

          # Read validated secret names from environment
          IFS=' ' read -r -a VALID_SECRET_NAMES_1 <<< "prod prod1"
          IFS=' ' read -r -a VALID_SECRET_NAMES_2 <<< "prod prod1"

          MISMATCHES='{"region1_only": {}, "region2_only": {}, "mismatched_envs": {}}'

          for SECRET_NAME in "${VALID_SECRET_NAMES_1[@]}"; do
            SECRET1=$(aws secretsmanager get-secret-value --region "$REGION1" --secret-id "$SECRET_NAME" --query 'SecretString' --output text || echo "{}")
            SECRET2=$(aws secretsmanager get-secret-value --region "$REGION2" --secret-id "$SECRET_NAME" --query 'SecretString' --output text || echo "{}")

            # Sort secrets for comparison
            SORTED_SECRET1=$(echo "$SECRET1" | jq -S . || echo "{}")
            SORTED_SECRET2=$(echo "$SECRET2" | jq -S . || echo "{}")

            if [[ "$SORTED_SECRET1" != "$SORTED_SECRET2" ]]; then
              REGION1_ONLY=$(echo "$SORTED_SECRET1" | jq -c --argjson secret2 "$SORTED_SECRET2" \
                'to_entries | map(select(.value != ($secret2[.key]))) | from_entries')
              REGION2_ONLY=$(echo "$SORTED_SECRET2" | jq -c --argjson secret1 "$SORTED_SECRET1" \
                'to_entries | map(select(.value != ($secret1[.key]))) | from_entries')

              # Extract mismatched environment variables
              REGION1_MISMATCHES=$(echo "$REGION1_ONLY" | jq -r 'to_entries | map("\(.key): \(.value)") | .[]')
              REGION2_MISMATCHES=$(echo "$REGION2_ONLY" | jq -r 'to_entries | map("\(.key): \(.value)") | .[]')

              if [[ -n "$REGION1_MISMATCHES" || -n "$REGION2_MISMATCHES" ]]; then
                # Format mismatches as human-readable key-value pairs for each region
                MISMATCHES=$(echo "$MISMATCHES" | jq -c --arg SECRET_NAME "$SECRET_NAME" \
                  --arg REGION1 "$REGION1_MISMATCHES" --arg REGION2 "$REGION2_MISMATCHES" \
                  '.mismatched_envs[$SECRET_NAME] = { "region1": $REGION1, "region2": $REGION2 }')
              fi
            fi
          done

          echo "$MISMATCHES" > mismatches.json
          echo "mismatches=$MISMATCHES" >> $GITHUB_ENV

      # Step 4: Upload mismatches JSON to GitHub for further analysis or debugging
      - name: Upload mismatches JSON as artifact
        uses: actions/upload-artifact@v3
        with:
          name: mismatches-json
          path: mismatches.json

      # Optional: Slack Notification (if configured)
      - name: Send Slack notification for mismatches
        if: ${{ steps.compare-secrets.outputs.mismatches != '{}' }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text": "Secrets mismatch detected between AWS regions. Please check the mismatches.json artifact for details."}' ${{ secrets.SLACK_WEBHOOK_URL }}
