set -e

# Parse secrets as JSON using Python
SECRET1_JSON=$(python3 -c "
import json
import sys
try:
    secret = json.dumps(json.loads('{\"name\":\"test\",\"test\":\"test1\",\"name1\":\"hello\"}'), sort_keys=True)
    print(secret)
except Exception as e:
    sys.exit('Invalid JSON in SECRET1: ' + str(e))
")
SECRET2_JSON=$(python3 -c "
import json
import sys
try:
    secret = json.dumps(json.loads('{\"name\":\"test\",\"test\":\"test1\",\"name1\":\"hello1\"}'), sort_keys=True)
    print(secret)
except Exception as e:
    sys.exit('Invalid JSON in SECRET2: ' + str(e))
")

# Identify mismatched keys and values using Python
MISMATCHES=$(python3 -c "
import json
secret1 = json.loads(\"$SECRET1_JSON\")
secret2 = json.loads(\"$SECRET2_JSON\")

region1_only = {k: v for k, v in secret1.items() if k not in secret2 or secret1[k] != secret2[k]}
region2_only = {k: v for k, v in secret2.items() if k not in secret1 or secret1[k] != secret2[k]}

mismatches = {
    'region1_only': region1_only,
    'region2_only': region2_only
}

print(json.dumps(mismatches, indent=2))
")

# Save mismatches to environment
echo "MISMATCHES=$MISMATCHES" >> $GITHUB_ENV

# Check for differences
DIFFERENCES=$(python3 -c "
import json
import sys
if \"$SECRET1_JSON\" == \"$SECRET2_JSON\":
    print('true')
else:
    print('false')
")

echo "DIFFERENCES=$DIFFERENCES" >> $GITHUB_ENV

# Output the match status
if [[ "$DIFFERENCES" == "true" ]]; then
    echo "match=true" >> $GITHUB_ENV
else
    echo "match=false" >> $GITHUB_ENV
fi
