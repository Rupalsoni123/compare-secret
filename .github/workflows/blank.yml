name: Compare AWS Secrets

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight

jobs:
  compare-secrets:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Configure AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Default region for AWS CLI

      # Step 2: Fetch secrets from both regions
      - name: Fetch secrets from both regions
        id: fetch_secrets
        run: |
          set -e

          # Set regions explicitly
          REGION1="us-east-1"
          REGION2="us-west-2"
          
          # List of secret names to compare
          SECRET_LIST1="prod"  # Adjust the list of secrets as needed

          # Loop through each secret in the list
          for SECRET_NAME in $SECRET_LIST1; do
            echo "Comparing secret: $SECRET_NAME"
            
            # Fetch the secret value from both regions
            SECRET1=$(aws secretsmanager get-secret-value --region "$REGION1" --secret-id "$SECRET_NAME" --query 'SecretString' --output text || echo "{}")
            SECRET2=$(aws secretsmanager get-secret-value --region "$REGION2" --secret-id "$SECRET_NAME" --query 'SecretString' --output text || echo "{}")
            
            # Sort and format secrets using jq
            SORTED_SECRET1=$(echo "$SECRET1" | jq -S .)
            SORTED_SECRET2=$(echo "$SECRET2" | jq -S .)

            # Compare sorted JSON strings
            if [[ "$SORTED_SECRET1" == "$SORTED_SECRET2" ]]; then
                echo "$SECRET_NAME: match=true" >> $GITHUB_ENV
            else
                echo "$SECRET_NAME: match=false" >> $GITHUB_ENV

                # Identify mismatches using JSON comparison
                REGION1_ONLY=$(echo "$SORTED_SECRET1" | jq -c --argjson secret2 "$SORTED_SECRET2" \
                  'to_entries | map(select(.value != ($secret2[.key]))) | from_entries')
                
                REGION2_ONLY=$(echo "$SORTED_SECRET2" | jq -c --argjson secret1 "$SORTED_SECRET1" \
                  'to_entries | map(select(.value != ($secret1[.key]))) | from_entries')

                # Ensure the output is correctly formatted as a JSON string
                MISMATCHES=$(jq -n --argjson region1_only "$REGION1_ONLY" --argjson region2_only "$REGION2_ONLY" \
                  '{region1_only: $region1_only, region2_only: $region2_only}')

                # Save mismatches to a file
                echo "$MISMATCHES" > mismatches_$SECRET_NAME.json

                # Serialize mismatches to a string format
                MISMATCHES_STRING=$(echo "$MISMATCHES" | jq -c .)

                # Save mismatches as environment variable
                echo "mismatches_$SECRET_NAME=$MISMATCHES_STRING" >> $GITHUB_ENV
            fi
          done
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SECRET_LIST1: prod  # Adjust as necessary

      # Step 3: Notify Slack - Secrets Match
      - name: Notify Slack - Secrets Match
        if: env.match == 'true'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ Secrets in both regions are identical."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 4: Notify Slack - Secrets Mismatched
      - name: Notify Slack - Secrets Mismatched
        if: env.match == 'false'
        run: |
          echo "Mismatches file: mismatches_$SECRET_NAME.json" # Debug output for mismatches

          # Read mismatches into a string
          MISMATCHES_STRING=$(cat mismatches_$SECRET_NAME.json)

          # Extract the mismatched environment variables (only the keys that differ)
          REGION1_ONLY_KEYS=$(echo "$MISMATCHES_STRING" | jq -r '.region1_only | to_entries | map("\(.key): \(.value)") | .[]')
          REGION2_ONLY_KEYS=$(echo "$MISMATCHES_STRING" | jq -r '.region2_only | to_entries | map("\(.key): \(.value)") | .[]')

          # Notify Slack with mismatches as an attachment
          curl -X POST -H 'Content-type: application/json' \
          --data "{
              \"text\": \"⚠️ Secrets in both regions do not match.\",
              \"attachments\": [
                  {
                      \"text\": \"Mismatches in region 1: \n${REGION1_ONLY_KEYS}\nMismatches in region 2: \n${REGION2_ONLY_KEYS}\"
                  }
              ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
